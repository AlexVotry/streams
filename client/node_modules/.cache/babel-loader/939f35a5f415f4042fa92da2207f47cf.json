{"ast":null,"code":"import _classCallCheck from \"/home/alex/react-practice/react-udemy/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alex/react-practice/react-udemy/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/alex/react-practice/react-udemy/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/alex/react-practice/react-udemy/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/alex/react-practice/react-udemy/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/alex/react-practice/react-udemy/streams/client/src/components/GoogleAuth.js\";\nimport React, { Component } from 'react';\n\nvar GoogleAuth =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GoogleAuth, _Component);\n\n  function GoogleAuth() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GoogleAuth);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GoogleAuth)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      isSignedIn: null\n    };\n\n    _this.onAuthChange = function () {\n      _this.setState({\n        isSignedIn: _this.auth.isSignedIn.get()\n      });\n    };\n\n    _this.onSignIn = function () {\n      _this.auth.signIn();\n    };\n\n    _this.onSignOut = function () {\n      _this.auth.signOut();\n    };\n\n    return _this;\n  }\n\n  _createClass(GoogleAuth, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      window.gapi.load('client:auth2', function () {\n        window.gapi.client.init({\n          clientId: '49451685533-gtu2iqek0citiq2b20jm8l06v5jpsvg2.apps.googleusercontent.com',\n          scope: 'email'\n        }).then(function () {\n          _this2.auth = window.gapi.auth2.getAuthInstance();\n\n          _this2.setState({\n            isSignedIn: _this2.auth.isSignedIn.get()\n          });\n\n          _this2.auth.isSignedIn.listen(_this2.onAuthChange);\n        });\n      });\n    }\n  }, {\n    key: \"renderAuthButton\",\n    value: function renderAuthButton() {\n      if (this.state.isSignedIn === null) {\n        return null;\n      } else if (this.state.isSignedIn) {\n        return React.createElement(\"button\", {\n          className: \"ui red google button\",\n          onClick: \"onSignIn()\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"google icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }), \"Sign Out\");\n      } else {\n        return React.createElement(\"button\", {\n          className: \"ui green google button\",\n          onClick: \"onSignOut\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"google icon\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }), \"Sign In With Google\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.renderAuthButton());\n    }\n  }]);\n\n  return GoogleAuth;\n}(Component);\n\nexport default GoogleAuth;","map":{"version":3,"sources":["/home/alex/react-practice/react-udemy/streams/client/src/components/GoogleAuth.js"],"names":["React","Component","GoogleAuth","state","isSignedIn","onAuthChange","setState","auth","get","onSignIn","signIn","onSignOut","signOut","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,U;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AAAEC,MAAAA,UAAU,EAAE;AAAd,K;;UAeRC,Y,GAAe,YAAM;AACjB,YAAKC,QAAL,CAAc;AAAEF,QAAAA,UAAU,EAAE,MAAKG,IAAL,CAAUH,UAAV,CAAqBI,GAArB;AAAd,OAAd;AACH,K;;UAEDC,Q,GAAW,YAAM;AACb,YAAKF,IAAL,CAAUG,MAAV;AACH,K;;UAEDC,S,GAAY,YAAM;AACd,YAAKJ,IAAL,CAAUK,OAAV;AACH,K;;;;;;;yCAvBoB;AAAA;;AACjBC,MAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,YAAM;AACnCF,QAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACpBC,UAAAA,QAAQ,EAAE,yEADU;AAEpBC,UAAAA,KAAK,EAAE;AAFa,SAAxB,EAGGC,IAHH,CAGQ,YAAM;AACV,UAAA,MAAI,CAACb,IAAL,GAAYM,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;;AACA,UAAA,MAAI,CAAChB,QAAL,CAAc;AAAEF,YAAAA,UAAU,EAAE,MAAI,CAACG,IAAL,CAAUH,UAAV,CAAqBI,GAArB;AAAd,WAAd;;AACA,UAAA,MAAI,CAACD,IAAL,CAAUH,UAAV,CAAqBmB,MAArB,CAA4B,MAAI,CAAClB,YAAjC;AACH,SAPD;AAQH,OATD;AAUH;;;uCAekB;AACf,UAAI,KAAKF,KAAL,CAAWC,UAAX,KAA0B,IAA9B,EAAoC;AAChC,eAAO,IAAP;AACH,OAFD,MAEO,IAAI,KAAKD,KAAL,CAAWC,UAAf,EAA2B;AAC9B,eACI;AAAQ,UAAA,SAAS,EAAC,sBAAlB;AAAyC,UAAA,OAAO,EAAC,YAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,aADJ;AAMH,OAPM,MAOA;AACH,eACI;AAAQ,UAAA,SAAS,EAAC,wBAAlB;AAA2C,UAAA,OAAO,EAAC,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,wBADJ;AAMH;AACJ;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKoB,gBAAL,EAAN,CADJ;AAGH;;;;EAtDoBvB,S;;AAyDzB,eAAeC,UAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass GoogleAuth extends Component {\n\n    state = { isSignedIn: null }\n\n    componentWillMount() {\n        window.gapi.load('client:auth2', () => {\n            window.gapi.client.init({\n                clientId: '49451685533-gtu2iqek0citiq2b20jm8l06v5jpsvg2.apps.googleusercontent.com',\n                scope: 'email'\n            }).then(() => {\n                this.auth = window.gapi.auth2.getAuthInstance();\n                this.setState({ isSignedIn: this.auth.isSignedIn.get() });\n                this.auth.isSignedIn.listen(this.onAuthChange);\n            });\n        });\n    }\n\n    onAuthChange = () => {\n        this.setState({ isSignedIn: this.auth.isSignedIn.get() });\n    }\n\n    onSignIn = () => {\n        this.auth.signIn();\n    }\n\n    onSignOut = () => {\n        this.auth.signOut();\n    }\n    \n\n    renderAuthButton() {\n        if (this.state.isSignedIn === null) {\n            return null;\n        } else if (this.state.isSignedIn) {\n            return (\n                <button className=\"ui red google button\" onClick=\"onSignIn()\">\n                    <i className=\"google icon\"/>\n                    Sign Out\n                </button>\n            );\n        } else {\n            return (\n                <button className=\"ui green google button\" onClick=\"onSignOut\">\n                    <i className=\"google icon\" />\n                    Sign In With Google\n                </button>\n            )\n        }\n    }\n\n    render() {\n        return (\n            <div>{this.renderAuthButton()}</div>\n        );\n    }\n}\n\nexport default GoogleAuth;"]},"metadata":{},"sourceType":"module"}